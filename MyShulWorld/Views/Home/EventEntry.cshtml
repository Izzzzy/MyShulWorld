@using Zmanim.Data;
@using MyShulWorld;
@model MyShulWorld.Models.UpdatesViewModel
<link href="~/Content/EventEntry.css" rel="stylesheet" />

<button id="test">test</button>
@if (Model.Et != null || Model.E != null)
{
    <div class="row">
        <h1 style="text-align: left; margin-left: 330px">Update or Edit Event</h1>
        @if (Model.Et != null)
        {
            <a href="/home/submitdeleteEventtype?eventTypeId=@Model.Et.ID" class="btn btn-danger">Delete EventType Completely</a>
        }
        else if (Model.E != null)
        {
            <a href="/home/submitdeleteEvent?eventId=@Model.E.Id" class="btn btn-danger">Delete Event Completely</a>
        }
    </div>
}
else
{
    <h1 style="text-align: left; margin-left: 350px">Enter A New Event</h1>
}

<div class="well" style="width: 700px; text-align: center; background-color: #ffffe6
; border-color:#003566; border-width: 3px; border-radius: 0px; margin-left: 150px">

    <h4>Enter event name in the box below or hover</h4>
    <h4>and click on arrow for a list to select from</h4>
    <datalist id="events">
        <option value="Shacharis">שחרית</option>
        <option value="Mincha">מנחה</option>
        <option value="Maariv">מעריב</option>
        <option value="Sunrise">זריחה</option>
        <option value="Sunset">שקיעה</option>
        <option value="Chatzos">חצות</option>
        <option value="Latest shema Magen Avraham">סוף זמן קריאת שמע - מ"א</option>
        <option value="Latest shema Gra">סוף זמן קריאת שמע - גר"א</option>
        <option value="Latest shachris Gra">סוף זמן תפילה</option>
    </datalist>
    <input type="text" style="width: 320px" id="event" list="events" value="@Model.EventName()">
    <hr style="border-color: darkcyan; border-style: dotted" />
    <h4>Is this a recurring event or one time?</h4>
    <form role="form">
        <div class="radio-inline">
            <label><input type="radio" name="isOneTime" value="recurring" @Model.RdoRecur()>Recurring</label>
        </div>
        <div class="radio-inline">
            <label><input type="radio" name="isOneTime" value="once" @Model.RdoOnce()>One Time</label>
        </div>
    </form>
    <br />
    <div id="recurring" class="@Model.ShowRecur()">
        <h4>Event will occur only on:</h4>
        <div style="text-align: left; width: 320px; margin-left: 173px">
            <select name="restriction1[]" multiple id="restriction1">
                <option value="Saturday" @Model.CheckIfSelectedRest("Saturday", 1)>Shabbos</option>
                <option value="YomTov" @Model.CheckIfSelectedRest("YomTov", 1)>Yom Tov</option>
                <option value="RoshChodesh" @Model.CheckIfSelectedRest("RoshChodesh", 1)>Rosh Chodesh</option>
                <option value="Taanis" @Model.CheckIfSelectedRest("Taanis", 1)>Taanis</option>
                <option value="Sunday" @Model.CheckIfSelectedRest("Sunday", 1)>Sunday</option>
                <option value="Monday" @Model.CheckIfSelectedRest("Monday", 1)>Monday</option>
                <option value="Tuesday" @Model.CheckIfSelectedRest("Tuesday", 1)>Tuesday</option>
                <option value="Wednesday" @Model.CheckIfSelectedRest("Wednesday", 1)>Wednesday</option>
                <option value="Thursday" @Model.CheckIfSelectedRest("Thursday", 1)>Thursday</option>
                <option value="Friday" @Model.CheckIfSelectedRest("Friday", 1)>Friday</option>
            </select>
        </div>

        <div id="more-restrictions">
            @if (Model.Et != null && Model.RestrictionsStrings != null)
            {
                <input type="hidden" id="restrictions-list" value="@Model.RestrictionsStrings.Count" />
                for (int i = 2; i <= Model.RestrictionsStrings.Count; i++)
                {
                    <h4>Only when it falls out on:</h4>
                    <div style="text-align: left; width: 320px; margin-left: 173px">
                        <select name="@Model.RestDivName(i)" multiple id="@Model.RestDivId(i)">
                            <option value="Saturday" @Model.CheckIfSelectedRest("Saturday", i)>Shabbos</option>
                            <option value="YomTov" @Model.CheckIfSelectedRest("YomTov", i)>Yom Tov</option>
                            <option value="RoshChodesh" @Model.CheckIfSelectedRest("RoshChodesh", i)>Rosh Chodesh</option>
                            <option value="Taanis" @Model.CheckIfSelectedRest("Taanis", i)>Taanis</option>
                            <option value="Sunday" @Model.CheckIfSelectedRest("Sunday", i)>Sunday</option>
                            <option value="Monday" @Model.CheckIfSelectedRest("Monday", i)>Monday</option>
                            <option value="Tuesday" @Model.CheckIfSelectedRest("Tuesday", i)>Tuesday</option>
                            <option value="Wednesday" @Model.CheckIfSelectedRest("Wednesday", i)>Wednesday</option>
                            <option value="Thursday" @Model.CheckIfSelectedRest("Thursday", i)>Thursday</option>
                            <option value="Friday" @Model.CheckIfSelectedRest("Friday", i)>Friday</option>
                        </select>
                    </div>
                }
            }
        </div>

        <button id="add-restriction" class="btn btn-outline btn-info" style="margin-top: 15px">Add Restriction</button>

        <h4 style="">Excluding when this day falls out on:</h4>
        <div style="text-align: left; width: 320px; margin-left: 173px">
            <select name="exclusion1[]" multiple id="exclusion1">
                <option value="Saturday" @Model.CheckIfSelectedExc("Saturday", 1)>Shabbos</option>
                <option value="YomTov" @Model.CheckIfSelectedExc("YomTov", 1)>Yom Tov</option>
                <option value="RoshChodesh" @Model.CheckIfSelectedExc("RoshChodesh", 1)>Rosh Chodesh</option>
                <option value="Taanis" @Model.CheckIfSelectedExc("Taanis", 1)>Taanis</option>
                <option value="Sunday" @Model.CheckIfSelectedExc("Sunday", 1)>Sunday</option>
                <option value="Monday" @Model.CheckIfSelectedExc("Monday", 1)>Monday</option>
                <option value="Tuesday" @Model.CheckIfSelectedExc("Tuesday", 1)>Tuesday</option>
                <option value="Wednesday" @Model.CheckIfSelectedExc("Wednesday", 1)>Wednesday</option>
                <option value="Thursday" @Model.CheckIfSelectedExc("Thursday", 1)>Thursday</option>
                <option value="Friday" @Model.CheckIfSelectedExc("Friday", 1)>Friday</option>
            </select>
        </div>

        <div id="more-exclusions">
            @if (Model.Et != null && Model.ExclusionsStrings != null)
            {
                <input type="hidden" id="exclusions-list" value="@Model.ExclusionsStrings.Count" />
                for (int i = 2; i <= Model.ExclusionsStrings.Count; i++)
                {
                    <h4>and only if also falls out on:</h4>
                    <div style="text-align: left; width: 320px; margin-left: 173px">

                        <select name="@Model.ExcDivName(i)" multiple id="@Model.ExcDivId(i)">
                            <option value="Saturday" @Model.CheckIfSelectedExc("Saturday", i)>Shabbos</option>
                            <option value="YomTov" @Model.CheckIfSelectedExc("YomTov", i)>Yom Tov</option>
                            <option value="RoshChodesh" @Model.CheckIfSelectedExc("RoshChodesh", i)>Rosh Chodesh</option>
                            <option value="Taanis" @Model.CheckIfSelectedExc("Taanis", i)>Taanis</option>
                            <option value="Sunday" @Model.CheckIfSelectedExc("Sunday", i)>Sunday</option>
                            <option value="Monday" @Model.CheckIfSelectedExc("Monday", i)>Monday</option>
                            <option value="Tuesday" @Model.CheckIfSelectedExc("Tuesday", i)>Tuesday</option>
                            <option value="Wednesday" @Model.CheckIfSelectedExc("Wednesday", i)>Wednesday</option>
                            <option value="Thursday" @Model.CheckIfSelectedExc("Thursday", i)>Thursday</option>
                            <option value="Friday" @Model.CheckIfSelectedExc("Friday", i)>Friday</option>
                        </select>
                    </div>
                }
            }
        </div>

        <button id="add-exclusion" class="btn btn-outline btn-warning" style="margin-top: 15px">Add Exclusion</button>

        <hr style="margin-left: 100px; margin-right: 100px; margin-bottom: 20px" />
        <button class="btn btn-success btn-outline" id="btn-fromTo" style="margin-top: 0px">CLICK here to add a 'Start' and 'End' date for this event</button>
        <div id="from-to" class="@Model.ShowStartEnd()" style="margin-top: 40px">
            <div class="row">
                <h4 style="display: inline">Start: </h4>
                <input type="text" class="datepicker" id="from" style="text-align: center" @Model.StartDate()>
                <h4 style="display: inline; margin-left: 40px">End: </h4>
                <input type="text" class="datepicker" id="to" style="text-align: center" @Model.EndDate()>
                <button class="btn btn-outline btn-danger btn-sm" id="clear" style="margin-left: 15px">Cancel</button>
            </div>
        </div>
    </div>
    <div id="single-date" class="@Model.ShowDate()">
        <h4 style="display: inline">Enter the date: </h4>
        <input type="text" class="datepicker" id="date" style="text-align: center" @Model.SingleDate()>
    </div>
    <hr style="border-style: dotted" />
    <h4>Does this event have a fixed time or is it based on another z'man?</h4>
    <form role="form">
        <div class="radio-inline">
            <label><input type="radio" name="ifFixed" value="fixed" @Model.RdoFixed()>Fixed Time</label>
        </div>
        <div class="radio-inline">
            <label><input type="radio" name="ifFixed" value="not-fixed" @Model.RdoBasedon()>Based On Another Z'man</label>
        </div>
    </form>
    <div id="time-pick" class="@Model.ShowTime()" style="margin-top: 30px">
        <h4>Enter the time for the event:</h4>
        <div style="margin-left: 200px">

            @if (Model.E != null || Model.Et != null)
            {
                <input type="text" id="timepicker" name="timepicker" value="@Model.ViewTimeFunc()" class="timepicker form-control" style="width: 271px; border-radius: 0px; height: 30px; text-align: center" placeholder="hh : mm  am/pm">
                <input type="hidden" id="time" value="@Model.Time24Func()" />
            }
            else
            {
                <input type="text" id="timepicker" name="timepicker" value="12 : 00 AM" class="timepicker form-control" style="width: 271px; border-radius: 0px; height: 30px; text-align: center" placeholder="hh : mm  am/pm">
                <input type="hidden" id="time" value="12:00" />
            }

        </div>
    </div>
    <br />
    <div id="basedon-difference" class="@Model.ShowBasedOnDifference()">
        <h4>Select what you would like to base this event on:</h4>
        <select style="height: 26px" id="based-on-select">
            <option value="" disabled selected>Select A Zman</option>
            <option value="3" @Model.CheckIfBasedon(3)>Alos</option>
            <option value="4" @Model.CheckIfBasedon(4)>Sof Zman Krias Shema Mg"a</option>
            <option value="5" @Model.CheckIfBasedon(5)>Sof Zman Krias Shema Gr"a</option>
            <option value="2" @Model.CheckIfBasedon(2)>Chatzos</option>
            <option value="6" @Model.CheckIfBasedon(6)>Plag Hamincha</option>
            <option value="7" @Model.CheckIfBasedon(7)>Mincha Gedola</option>
            <option value="8" @Model.CheckIfBasedon(8)>Mincha Ketana</option>
            <option value="1" @Model.CheckIfBasedon(1)>Shekiah</option>
        </select>
        <br />
        <h4 style="margin-bottom: 25px">Enter the amount of minutes</h4>
        <input type="number" style="width: 60px; text-align: center" min="0" id="minutes" value="@Model.Difference()" placeholder="0">
        <h4 style="display: inline; margin-right: 20px">minutes</h4>
        <label class="radio-inline"><input type="radio" class="beforeAfterRdo" name="beforeAfter" value="before" @Model.RdoBefore()>Before</label>
        <label class="radio-inline"><input type="radio" class="beforeAfterRdo" name="beforeAfter" value="after" @Model.RdoAfter()>After</label>
    </div>
    <hr style="border-color: darkcyan; border-style: dotted" />
    @if (Model.Et != null || Model.E != null)
    {
        <button class="btn btn-primary btn-outline btn-lg wide" id="enter">
            <h4>Submit Update</h4>
        </button>
    }
    else
    {
        <button class="btn btn-primary btn-outline btn-lg wide" id="enter">
            <h4>Submit Event</h4>
        </button>
    }

</div>

@if (Model.E != null)
{
    <input type="hidden" id="eventId" value="@Model.E.Id" />
}

@if (Model.Et != null)
{
    <input type="hidden" id="eventTypeId" value="@Model.Et.ID" />
}


@section scripts{

    <script src="~/Scripts/EventEntry.js"></script>
}